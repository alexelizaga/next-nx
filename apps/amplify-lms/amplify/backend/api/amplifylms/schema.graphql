type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  icon: String
  name: String!
  Courses: [Course] @hasMany(indexName: "byCategory", fields: ["id"])
}

type Course @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  description: String
  image: String
  price: Float
  isPublished: Boolean
  categoryId: ID @index(name: "byCategory")
  Category: Category @belongsTo(fields: ["categoryId"])
}

type Platform @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  value: String
  Products: [Product] @hasMany(indexName: "byPlatform", fields: ["id"])
}

type Genre @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  value: String
  Products: [Product] @hasMany(indexName: "byGenre", fields: ["id"])
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  isSold: Boolean
  price: Float
  image: String
  platformID: ID! @index(name: "byPlatform")
  genreID: ID! @index(name: "byGenre")
  Platform: Platform @belongsTo(fields: ["platformID"])
  Genre: Genre @belongsTo(fields: ["genreID"])
}
 